services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'
    healthcheck:
      test: ['CMD', 'echo', 'ruok', '|', 'nc', 'localhost', '2181']
      interval: 5s
      timeout: 5s
      retries: 10

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'nc', '-z', 'localhost', '9092']
      interval: 5s
      timeout: 5s
      retries: 10

  mongo:
    image: mongo
    ports:
      - '27017:27017'
    command: mongod --quiet --logpath /dev/null
    healthcheck:
      test: ['CMD', 'mongosh', '--eval', "db.adminCommand('ping')"]
      interval: 5s
      timeout: 5s
      retries: 10

  postgres:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: randompassword
      POSTGRES_DB: htclinichub
    ports:
      - '5433:5432'
    healthcheck:
      test: ['CMD', 'pg_isready', '-U', 'postgres']
      interval: 5s
      timeout: 5s
      retries: 10

  # postgres-test:
  #   image: postgres
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: randompassword
  #     POSTGRES_DB: authservice
  #   ports:
  #     - '5432:5432'
  #   healthcheck:
  #     test: ['CMD', 'pg_isready', '-U', 'postgres']
  #     interval: 5s
  #     timeout: 5s
  #     retries: 10

  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    command: sh -c "sleep 10 && pnpm run start:dev api-gateway"
    develop:
      watch:
        - action: sync
          path: ./apps/api-gateway/src
          target: /app/apps/api-gateway/src
          ignore:
            - node_modules/
        - action: sync
          path: ./libs
          target: /app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    env_file:
      - .env
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
    ports:
      - '3000:3000'

  clinics:
    build:
      context: .
      dockerfile: ./apps/clinics/Dockerfile
      target: development
    command: sh -c "sleep 10 && pnpm run start:dev clinics"
    develop:
      watch:
        - action: sync
          path: ./apps/clinics/src
          target: /app/apps/clinics/src
          ignore:
            - node_modules/
        - action: sync
          path: ./libs
          target: /app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    env_file:
      - ./apps/clinics/.env
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: sh -c "sleep 10 && pnpm run start:dev auth"
    develop:
      watch:
        - action: sync
          path: ./apps/auth/src
          target: /app/apps/auth/src
          ignore:
            - node_modules/
        - action: sync
          path: ./libs
          target: /app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    env_file:
      - .env
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
    ports:
      - '3001:3001'

  staff:
    build:
      context: .
      dockerfile: ./apps/staff/Dockerfile
      target: development
    command: sh -c "sleep 10 && pnpm run start:dev staff"
    develop:
      watch:
        - action: sync
          path: ./apps/staff/src
          target: /app/apps/staff/src
          ignore:
            - node_modules/
        - action: sync
          path: ./libs
          target: /app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    ports:
      - '3003:3003'
    env_file:
      - .env
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy

  analyze-healthcare-data:
    build:
      context: .
      dockerfile: ./apps/analyze-healthcare-data/Dockerfile
      target: development
    command: sh -c "sleep 10 && pnpm run start:dev analyze-healthcare-data"
    develop:
      watch:
        - action: sync
          path: ./apps/analyze-healthcare-data/src
          target: /app/apps/analyze-healthcare-data/src
          ignore:
            - node_modules/
        - action: sync
          path: ./libs
          target: /app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    env_file:
      - ./apps/analyze-healthcare-data/.env
    depends_on:
      kafka:
        condition: service_healthy
      mongo:
        condition: service_healthy
  patient:
    build:
      context: .
      dockerfile: ./apps/patients/Dockerfile
      target: development
    command: sh -c "sleep 10 && pnpm run start:dev patients"
    develop:
      watch:
        - action: sync
          path: ./apps/patients/src
          target: /app/apps/patients/src
          ignore:
            - node_modules/
        - action: sync
          path: ./libs
          target: /app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    ports:
      - '3005:3005'
    env_file:
      - .env
    depends_on:
      kafka:
        condition: service_healthy
      postgres:
        condition: service_healthy
      mongo:
        condition: service_healthy  
