services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - '2181:2181'

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - '9092:9092'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  api-gateway:
    build:
      context: .
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    command: pnpm run start:dev api-gateway
    develop:
      watch:
        - action: sync+restart
          path: ./apps/api-gateway/src
          target: /usr/src/app/apps/api-gateway/src
          ignore:
            - node_modules/
        - action: sync+restart
          path: ./libs
          target: /usr/src/app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    env_file:
      - ./apps/api-gateway/.env
    ports:
      - '3000:3000'

  reservations:
    build:
      context: .
      dockerfile: ./apps/reservations/Dockerfile
      target: development
    command: pnpm run start:dev reservations
    develop:
      watch:
        - action: sync+restart
          path: ./apps/reservations/src
          target: /usr/src/app/apps/reservations/src
          ignore:
            - node_modules/
        - action: sync+restart
          path: ./libs
          target: /usr/src/app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    env_file:
      - ./apps/reservations/.env

  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: pnpm run start:dev auth
    develop:
      watch:
        - action: sync+restart
          path: ./apps/auth/src
          target: /usr/src/app/apps/auth/src
          ignore:
            - node_modules/
        - action: sync+restart
          path: ./libs
          target: /usr/src/app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    env_file:
      - ./apps/auth/.env

      
  clinics:
    build:
      context: .
      dockerfile: ./apps/clinics/Dockerfile
      target: development
    command: pnpm run start:dev clinics
    develop:
      watch:
        - action: sync+restart
          path: ./apps/clinics/src
          target: /usr/src/app/apps/clinics/src
          ignore:
            - node_modules/
        - action: sync+restart
          path: ./libs
          target: /usr/src/app/libs
          ignore:
            - node_modules/
        - action: rebuild
          path: ./package.json
    env_file:
      - ./apps/clinics/.env  

  mongo:
    image: mongo

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres_clinics

  postgres_clinics:
    image: postgres:15
    container_name: htclinichub-postgres-clinics
    restart: always
    environment:
      POSTGRES_USER: clinics_user
      POSTGRES_PASSWORD: clinics_pass
      POSTGRES_DB: clinics_db
    ports:
      - "5433:5432"
    volumes:
      - clinics_pgdata:/var/lib/postgresql/data

volumes:
  clinics_pgdata:

  